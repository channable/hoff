language: generic

# Do not build other branches than these, pull requests get built anyway, and in
# the end it is only the result of the testing branch that matters. In theory
# the commits that get pushed to master should have been built in testing
# already, but sometimes I still push manually, and of course the evergreen
# build status badge needs to come from somewhere.
branches:
  only:
    - master
    - testing

# Do not spam me with build status emails.
notifications:
  email: false

# The Stack install script uses sudo. This does mean that we get a VM instead of
# a container, which is slower to boot. But 20 minutes on a ~dozen minute build
# is not that much, and it simplifies things a bit.
sudo: required

cache:
  directories:
    - $HOME/.stack/

before_install:
  # Install the latest version of Stack via the fpco PPA.
  - sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 575159689BEFB442
  - sudo add-apt-repository --yes "deb http://download.fpcomplete.com/ubuntu precise main"
  - sudo apt-get update --quiet
  - sudo apt-get install --yes stack
  # Upgrade to the latest version of Stack, which has `list-dependencies --license`.
  # Once that makes it into stable, this is no longer required.
  - stack upgrade --git --install-ghc --no-terminal

install:
  - stack setup --no-terminal

script:
  - stack build -j2 --no-terminal
  - stack test -j2 --no-terminal

  # Match the licenses of dependencies agains a whitelist, and fail if anything
  # is not whitelisted. YAML has this arcane feature where an exclamation mark
  # has special meaning, so the entire command is wrapped in single quotes.
  - '! stack list-dependencies --license --no-include-base | egrep -v "BSD3|MIT|ghc-prim|hoff|integer-gmp|template-haskell"'

  # As CI is running on a Debian-like system, test building
  # the package here too.
  - cd package && VERSION=0.0.0 ./build-package.sh
